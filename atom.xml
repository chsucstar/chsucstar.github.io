<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-01-06T04:13:12.429Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>chsucstar</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Linux远程访问第一部分</title>
    <link href="http://example.com/2024/01/04/Linux%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/"/>
    <id>http://example.com/2024/01/04/Linux%E8%BF%9C%E7%A8%8B%E8%AE%BF%E9%97%AE%E7%AC%AC%E4%B8%80%E9%83%A8%E5%88%86/</id>
    <published>2024-01-04T04:03:53.000Z</published>
    <updated>2024-01-06T04:13:12.429Z</updated>
    
    <content type="html"><![CDATA[<p>远程访问会用到 <code>ssh</code> 、<code>telnet</code> ，对于 telent 来说传输的数据是不加密的，密码是通过纯文本的形式来传递的，可以使用包获取工具来进行抓包解析。</p><br><h1 id="⬆️Telnet"><a href="#⬆️Telnet" class="headerlink" title="⬆️Telnet"></a>⬆️Telnet</h1><p>由于 telent 是以明文的方式进行数据的传递，所以对比 ssh 来说是不安全的，但是有的时候也会有用到 telnet 的情况。</p><p>早期由于计算机资源只在军队和高校上使用，所以并没有考虑到信息加密，所以早期的计算机使用明文来进行通讯，这也就是 Telnet 能被使用原因。</p><br><h2 id="➡️安装-telnet"><a href="#➡️安装-telnet" class="headerlink" title="➡️安装 telnet"></a>➡️安装 telnet</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yum -y install telnet-server telnet</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># firewall-cmd -add-service=telnet</span></span><br><span class="line"><span class="comment"># firewall-cmd -add-service=telent --permanent</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># systemctl start telnet.socket</span></span><br></pre></td></tr></table></figure><p>telnet 使用的端口是 <code>23</code> ，采用的是 C&#x2F;S 架构的方式，同时禁止管理员直接登陆。</p><h2 id="➡️关于-telnet"><a href="#➡️关于-telnet" class="headerlink" title="➡️关于 telnet"></a>➡️关于 telnet</h2><ul><li><p><strong>telnet 的数据流</strong></p><p>① 本地信息通过操作系统传入客户机</p><p>② 客户机程序处理信息后返回操作洗头膏，并通过操作系统经过网络传入目标远程机器</p><p>③ 远程的操作系统获得程序于是传给服务器程序，通过服务器程序再次处理返回操作系统上的伪终端</p><p>④ 操作系统程序将数据传送到用户正在运行的应用程序</p></li></ul><p><img src="/images/remote-administration/telnet.png"></p><ul><li><strong>telnet 使用另一个局限是开销大的原因</strong><ul><li>①每次输入输出计算机切换环境会多次切换</li><li>② telnet 是逐字节传输数据。</li></ul></li></ul><br><h1 id="⬆️SSH（Secure-shell）协议"><a href="#⬆️SSH（Secure-shell）协议" class="headerlink" title="⬆️SSH（Secure shell）协议"></a>⬆️SSH（Secure shell）协议</h1><p>ssh 是建立在应用层上的安全协议，最初是在 Unix 上的用来代替 telnet 等类型的程序。</p><p><img src="/images/remote-administration/image-20230703111448428.png"></p><ul><li><strong>windows 上的关于 ssh 连接的软件</strong><ul><li>Putty</li><li>OpenSSH</li><li>Termius</li><li>SecureCRT</li><li>MobaXterm</li></ul></li></ul><br><h2 id="➡️SSH-linux-客户端"><a href="#➡️SSH-linux-客户端" class="headerlink" title="➡️SSH linux 客户端"></a>➡️SSH linux 客户端</h2><p>多数发新版自带有 ssh  软件，基本都是 <code>OpenSSH-client</code></p><br><h3 id="🟦OpenSSH-client"><a href="#🟦OpenSSH-client" class="headerlink" title="🟦OpenSSH-client"></a>🟦OpenSSH-client</h3><ul><li><strong>关于 openssh-client 的配置</strong><ul><li><strong>全局配置</strong><ul><li>&#x2F;etc&#x2F;ssh&#x2F;ssh_config</li><li>&#x2F;etc&#x2F;ssh&#x2F;ssh_comfig&#x2F;*.conf</li></ul></li><li><strong>个人配置</strong><ul><li>~&#x2F;.ssh&#x2F;config</li></ul></li></ul></li><li><strong>命令：</strong><ul><li>ssh：OpenSSH SSH client (remote login program)</li><li>scp： Secure copy (remove file copy program)</li><li>sftp：Secure file transfer program</li></ul></li></ul><blockquote style="border-left: 5px solid #6CA2F9; background-color: #ECF3FE; padding: 10px;"><div style="color: #24687D; font-weight: bold;height: 20px;height:25px;">🔵 注意：</div>     <p style=" text-indent: 2em;">/etc/ssh/ssh_config 大部分是注释，默认有效的一行内容是加载一个目录。</p>    <p style=" text-indent: 2em;">~/.ssh/config 在home目录中有一个隐藏的文件夹，这个文件夹中有一个文件，包含的内容是 主机 + 秘钥</p></blockquote><br><h3 id="🟦SSH-的使用"><a href="#🟦SSH-的使用" class="headerlink" title="🟦SSH 的使用"></a>🟦SSH 的使用</h3><p>使用ssh连接默认使用的是root用户，可以加上参数 <code>ssh -l</code> 指定用户；或者是 <code>ssh 用户名@主机名</code> ，在这后面可以加上命令，这样会使得连接后执行命令随后退出ssh登陆。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ssh 192.168.1.232</span><br><span class="line"># ssh -l  tom 192.168.1.232  或者   ssh tom@192.168.1.232</span><br><span class="line"># ssh tom@192.168.1.232 ip a</span><br></pre></td></tr></table></figure><p><strong>scp的使用：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp anaconda.cfg root@192.168.1.232:/tmp/</span><br></pre></td></tr></table></figure><p><strong>sftp的使用：</strong></p><p>sftp与scp的命令类似</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># sftp 192.168.1.232</span><br><span class="line">sftp&gt; mget * 可以同时下过个文件到本地</span><br></pre></td></tr></table></figure><br><h2 id="➡️拒绝-root-用户登陆"><a href="#➡️拒绝-root-用户登陆" class="headerlink" title="➡️拒绝 root 用户登陆"></a>➡️拒绝 root 用户登陆</h2><h3 id="🟦OpenSSH-服务器配置文件"><a href="#🟦OpenSSH-服务器配置文件" class="headerlink" title="🟦OpenSSH 服务器配置文件"></a>🟦OpenSSH 服务器配置文件</h3><p>由于 ssh 是 Linux 最常用的远程访问协议，所以很多黑客会去查找漏洞。</p><p>下面是 <code>/etc/ssh</code></p><ul><li><strong>监听端口：<code>port 22</code></strong></li><li><strong>监听地址：<code>ListenAddress 0.0.0.0</code></strong></li><li><strong>允许 root 用户登陆：<code>PermitRootLogin yes</code></strong></li><li><strong>禁用 DNS 反向解析：<code>UseDNS no</code></strong></li></ul><table><thead><tr><th>配置文件</th><th>描述</th></tr></thead><tbody><tr><td>moduli</td><td>比较大的文本文件，是加密算法所使用的素数和随机秘钥生成器的文件</td></tr><tr><td>ssh_config</td><td>这是客户端的配置</td></tr><tr><td>ssh_config.d</td><td>是ssh服务器端的配置</td></tr><tr><td>sshd_config</td><td>是使用加密算法的服务器端的密钥对公共秘钥</td></tr><tr><td>ssh_host_ecdsa_key</td><td>是使用加密算法的服务器端的密钥对私有秘钥</td></tr><tr><td>ssh_host_ecdsa_key.pub</td><td>是使用加密算法的服务器端的密钥对的公共秘钥</td></tr><tr><td>ssh_host_ed25519_key</td><td>是使用加密算法的服务器端的密钥对私有秘钥</td></tr><tr><td>ssh_host_ed25519_key.pub</td><td>是使用加密算法的服务器端的密钥对的公共秘钥</td></tr><tr><td>ssh_host_rsa_key</td><td>是使用加密算法的服务器端的密钥对私有秘钥</td></tr><tr><td>ssh_host_rsa_key.pub</td><td>是使用加密算法的服务器端的密钥对的公共秘钥</td></tr></tbody></table><blockquote style="border-left: 5px solid #6CA2F9; background-color: #ECF3FE; padding: 10px;"><div style="color: #24687D; font-weight: bold;height: 20px;height:25px;">🔵 注意：</div>     <p style=" text-indent: 2em;"><code>/etc/ssh/ssh_config</code> 这里面记录了服务器端的公共秘钥文件，就在Hostkey这一部分。</p>    <p style=" text-indent: 2em;"><code>SyslogFacility AUTHPRIV</code>这与日志有关，后面指定了记录到安全日志的信息就是 /vr/log/secure 这个文件。</p>    <p style=" text-indent: 2em;"><code>PermitRootLogin yes</code> 允许root用户能够登陆。通过root登陆并不是很安全。</p></blockquote><p>除了修改配置文件，重启程序，还要考虑  <strong><code>selinux</code><strong>、</strong><code>防火墙的设置</code></strong> 。</p><p><strong>DNS反向解析：</strong>是指把 IP地址 解析成 主机名、域名， ssh用这个特性可以进行安全检查，但是如果ssh服务部署在内网，你的DNS没有做反向记录，当客户端来连接的时候，ssh去查服务器尝试进行反向解析，而DNS又没有记录，所以会超时，这就会等一段时间，所以会感觉卡一下，所以对与内网是 ssh 服务器来说，如果你的DNS没有设置查询的区域、记录，那么就可以设置成 no。</p><h2 id="➡️防火墙配置"><a href="#➡️防火墙配置" class="headerlink" title="➡️防火墙配置"></a>➡️防火墙配置</h2><h3 id="🟦背景知识：firewalld-的区域"><a href="#🟦背景知识：firewalld-的区域" class="headerlink" title="🟦背景知识：firewalld 的区域"></a>🟦背景知识：firewalld 的区域</h3><p>在CentOS8中，默认使用的是 firewalld 进行防火墙的管理。</p><p>firewalld 引入了一个区域与服务的概念，这样使得管理员管理起来更高效，区域也就是Zone 这是针对特定的应用或者是场景，可能具有的各种信任级别的一些与预设定的规则集。</p><p><img src="/images/remote-administration/sshfirewalld.png"></p><p>Zone最大的好处就是切换方便，可以在不同的环境下把Zone应用到网卡，源主机。比如：出差去连接公共的WiFi最好就是使用公共网络，这样配置的比较严格那么就会比较安全，而在家中连接的是自己的WiFi那么就可以获得比较宽松的规则。</p><h3 id="🟦原有默认的规则"><a href="#🟦原有默认的规则" class="headerlink" title="🟦原有默认的规则"></a>🟦原有默认的规则</h3><p><img src="/images/remote-administration/sshf2.png"></p><p>第一行：当前的活动区域只有public，public与机器上一个叫 ens160 的网卡做关联。</p><p>第二行：没有去指定Zone的名称，那么会采用默认的public区域。</p><br><p>需求：假设一个管理员他的IP地址是192.168.1.49，为了安全想使用防火墙来限制一下，要求只允许 192.168.1.49 来进行通过ssh服务端来进行管理，这个需求在防火墙配置中有很多的方法，比如说把这个ip地址添加到，trusted这个区域里面，然后在这个区域中允许ssh服务器的入站，然后把原来public的ssh服务给删除掉。</p><p>第三行：没有和ip做捆绑，也没有服务，这就需要调整。</p><br><h3 id="🟦只允许管理员在特定主机上访问SSH服务器"><a href="#🟦只允许管理员在特定主机上访问SSH服务器" class="headerlink" title="🟦只允许管理员在特定主机上访问SSH服务器"></a>🟦只允许管理员在特定主机上访问SSH服务器</h3><p><img src="/images/remote-administration/sshf3.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># firewall-cmd --permanent --add-source=192.168.1.19 --zone=trusted</span><br><span class="line"># firewall-cmd --permanent --add-serice=ssh --zone=trusted</span><br><span class="line"></span><br><span class="line"># firewall-cmd --permanent --remove-service=ssh --zone=public</span><br><span class="line"># firewall-cmd --reload</span><br></pre></td></tr></table></figure><p>第一行：通过 <code>--add-source</code> 添加到 <code>trusted</code> 中，也就是把ip和信任区域做关联。</p><p>第二行：添加ssh服务。</p><p>第三行：把原来的服务删除掉。</p><p>第四行：重新加载。</p><p><strong>修改规则之后：</strong></p><p><img src="/images/remote-administration/sshf4.png"></p><br><h2 id="➡️监听端口修改"><a href="#➡️监听端口修改" class="headerlink" title="➡️监听端口修改"></a>➡️监听端口修改</h2><p>单位的管理员根据单位的安全策略，需要去修改ssh服务器的配置，把默认监听的22端口，修改成222。</p><p>通过修改端口号来隐藏服务，这种做法对于新版本的扫描器来讲基本上用处不大，因为新版本的扫描器扫描的工具都很强大。</p><p>操作并不复杂，但是为了完成这个目标，需要修改除了ssh服务器的配置以外，还要修改selinux的策略和防火墙的配置。</p><p>selinux在默认的情况下会阻止sshd这个进程监听除了22以外的其他的非标准端口。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># yum -y install policycoreutils-python-utils</span><br><span class="line"></span><br><span class="line"># semanage port -a -t ssh_port_t -p tcp 2222</span><br><span class="line"># semanage port -l | grep ssh</span><br><span class="line"></span><br><span class="line"># vi /etc/ssh/sshd_config</span><br><span class="line">修改为: Port 22 为 Port 2222</span><br><span class="line"></span><br><span class="line"># firewalld-cmd --permanent --add-port 2222/tcp</span><br><span class="line"># firewalld-cmd --reload</span><br><span class="line"># systemctl restart sshd</span><br></pre></td></tr></table></figure><blockquote style="border-left: 5px solid #f00; background-color: #ffe5e5; padding: 10px;"><div style="color: #f00; font-weight: bold;height: 20px;height:25px;">🔴 警告：</div>     <p style=" text-indent: 2em;">直接修改 端口号而不做其他的工作要保存。</p></blockquote><blockquote style="border-left: 5px solid #f0ab00; background-color: #fdf7e7; padding: 10px;"><div style="color: #7d643f; font-weight: bold;height: 20px;height:25px;">🟡 重要：</div>     <p style=" text-indent: 2em;">一些深入的检查，可以查看 <code>端口号</code></p>    <p style=" text-indent: 2em;"><code>/var/log/messages</code> 系统日志</p>    <p style=" text-indent: 2em;"><code>/var/log/secure</code> 系统安全日志</p>    <p style=" text-indent: 2em;"><code>/var/log/audit/audit.log</code> 审计日志，看这种 type=AVC 这叫做访问向量缓存，这是selinux的日志。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;远程访问会用到 &lt;code&gt;ssh&lt;/code&gt; 、&lt;code&gt;telnet&lt;/code&gt; ，对于 telent 来说传输的数据是不加密的，密码是通过纯文本的形式来传递的，可以使用包获取工具来进行抓包解析。&lt;/p&gt;
&lt;br&gt;

&lt;h1 id=&quot;⬆️Telnet&quot;&gt;&lt;a hr</summary>
      
    
    
    
    <category term="Linux服务配置" scheme="http://example.com/categories/Linux%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/"/>
    
    
    <category term="ssh" scheme="http://example.com/tags/ssh/"/>
    
    <category term="telnet" scheme="http://example.com/tags/telnet/"/>
    
  </entry>
  
  <entry>
    <title>subnetting</title>
    <link href="http://example.com/2024/01/03/subnetting/"/>
    <id>http://example.com/2024/01/03/subnetting/</id>
    <published>2024-01-03T10:33:26.000Z</published>
    <updated>2024-01-03T12:38:28.638Z</updated>
    
    <content type="html"><![CDATA[<h1>1.划分子网</h1><p>划分子网用于缓解网络号不足的情况，网络允许划分更小的网络，这样的网络称为 <code>子网</code> ，从实际上就是从主机部分借位来表示子网。</p><ul><li><p><strong>子网号</strong></p><p>主机号的前几位</p></li><li><p><strong>主机位数</strong></p><p>主机位数=32-现有子网掩码1的个数</p></li></ul><br><h2 id="1-1-求子网地址和子网号：">1.1 求子网地址和子网号：</h2><p><strong>网络号</strong> 也称 <strong>网络地址</strong></p><p>子网地址：网络号（照抄）+ 子网号（照抄）+ 主机号（全部是0）</p><p>广播地址：网络号（照抄）+ 子网号（照抄）+ 主机号（全部是1）</p><p>子网掩码：网络号（全部为1）+ 子网号（全部为1）+ 主机号（全部是1）</p><br><h3 id="1-1-2-示列">1.1.2 示列:</h3><p>IP地址为 <code>192.168.1.163</code>，子网掩码 <code>255.255.255.224</code> 。</p><p>网络号是 <code>192.168.1</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">相关地址: 11000000  10101000  00000001  10100011   192.168.1.163</span><br><span class="line">子网掩码: 11111111  11111111  11111111  11100000   255.255.255.224</span><br><span class="line">子网地址: 11000000  10101000  00000001  10100000   192.168.1.160</span><br></pre></td></tr></table></figure><p>这里的子网号是5，子网位数本示列是3，所以10100000，取三位是5。</p><p>子网号（数字）：把IP地址和子网掩码最后一组进行 <code>与运算</code> ，在结果上从左往右区 n 位，再转十进制，不过在算 <strong>子网地址</strong> 的时候子网号是八位的二进制转十进制。</p><h2 id="1-2-其他">1.2 其他</h2><p>子网个数 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">2^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span></span></span></span></span></span></span></span> （n 表示子网位数）</p><p>主机数量 = <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>m</mi></msup><mo>−</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">2^{m}-2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span></span></span></span> （m 表示主机位数）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;1.划分子网&lt;/h1&gt;
&lt;p&gt;划分子网用于缓解网络号不足的情况，网络允许划分更小的网络，这样的网络称为 &lt;code&gt;子网&lt;/code&gt; ，从实际上就是从主机部分借位来表示子网。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;子网号&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;主机</summary>
      
    
    
    
    <category term="网络层" scheme="http://example.com/categories/%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
    
    
    <category term="划分子网" scheme="http://example.com/tags/%E5%88%92%E5%88%86%E5%AD%90%E7%BD%91/"/>
    
  </entry>
  
  <entry>
    <title>Internet-Protocol-Address</title>
    <link href="http://example.com/2024/01/03/Internet-Protocol-Address/"/>
    <id>http://example.com/2024/01/03/Internet-Protocol-Address/</id>
    <published>2024-01-03T03:49:42.000Z</published>
    <updated>2024-01-04T03:40:48.944Z</updated>
    
    <content type="html"><![CDATA[<h1 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h1><p><strong>IP地址的组成：网络地址+主机地址</strong></p><p>在 Internet 网络中，IP地址有两种表现形式：IP地址 和 域名</p><p><strong>点分十进制</strong>：在 ipv4中 IP地址分为4组，每组8个二进制，每组使用 <code>.</code> 来分隔。</p><p><br></p><h1 id="IP地址的分类"><a href="#IP地址的分类" class="headerlink" title="IP地址的分类"></a>IP地址的分类</h1><p><strong>特殊的IP地址</strong></p><div class="table-container"><table><thead><tr><th>表现形式</th><th>用途</th></tr></thead><tbody><tr><td>以 0 开头</td><td>服务器监听</td></tr><tr><td>以 127 开头</td><td>本机测试</td></tr><tr><td>主机部分全0</td><td>网络地址</td></tr><tr><td>主机部分全1</td><td>广播地址</td></tr></tbody></table></div><ul><li><p><strong>A类地址：</strong></p><p>IP地址特征最高位是0，第一节字节是网络地址，有效地址的范围是 1~126 。</p></li><li><p><strong>B类地址：</strong></p><p>最高位前两10，前两个字节是网络地址，地址范围 128.0.0.1 ~ 192.255.255.254</p></li><li><p><strong>C类地址：</strong></p><p>最高位前三位是110，前三个字节是网络地址，地址范围 192.0.0.1 ~ 223.255.255.254</p></li><li><p><strong>D类地址：</strong></p><p>地址范围是 224.0.0.0 ~ 239.255.255.255 用于多路广播，叫做多播地址</p></li><li><p><strong>E类地址：</strong></p><p>地址范围是 240.0.0.0 ~ 255.255.255.255 保留拓展地址</p></li></ul><p><br></p><h1 id="保留的IP地址（私有IP地址）"><a href="#保留的IP地址（私有IP地址）" class="headerlink" title="保留的IP地址（私有IP地址）"></a>保留的IP地址（私有IP地址）</h1><p>这些地址不需要申请，可以直接使用，这些地址只能在局域网内部使用，不能出现在 Internet 上。</p><div class="table-container"><table><thead><tr><th>网络类型</th><th>地址范围</th><th>默认子网掩码</th><th>特征</th></tr></thead><tbody><tr><td>A</td><td>10.0.0.1 ~ 10.255.255.254</td><td>255.0.0.0</td><td>以 10 来头</td></tr><tr><td>B</td><td>172.16.0.1 ~ 172.31.255.255.254</td><td>255.255.0.0</td><td>以 172.16 ~172.31 开头</td></tr><tr><td>C</td><td>192.168.0.1 ~ 192.168.255.254</td><td>255.255.255.0</td><td>以 192.168 开头</td></tr></tbody></table></div><p><br></p><h1 id="IPV6"><a href="#IPV6" class="headerlink" title="IPV6"></a>IPV6</h1><p>由128位二进制构成，采用 <strong>冒号十六进制</strong> 表示，并分成了8组，每组4位的十六进制。</p><p>理论上说 IPV6 的 IP 地址个数是 IPV4 的 IP 地址个数的 $2^{96}$ 倍。</p><script type="math/tex; mode=display">\frac {2^{128}}{2^{32}}=2^{96}</script><p><br></p><h2 id="使用冒分十六进制"><a href="#使用冒分十六进制" class="headerlink" title="使用冒分十六进制"></a>使用冒分十六进制</h2><ul><li><p><strong>零点压缩法：</strong></p><p>把连续的1组或多组0可以省略</p><p>如：<code>EF00:0000:0000:0000:0002:0000:0001:0003</code></p><p>压缩为：<code>EF00::0002:0000:0001:0003</code></p></li><li><p><strong>可省略每组前面的零</strong></p><p>如：<code>EF00:0000:0000:0000:0002:0000:0001:0003</code></p><p>压缩为：<code>EF00:0:0:0002:0:1:3</code></p></li><li><p><strong>也可以上面的合起来一起用</strong></p><p>如：<code>EF00:0000:0000:0000:0002:0000:0001:0003</code></p><p>压缩为：<code>EF00::2:0:1:3</code></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;IP地址&quot;&gt;&lt;a href=&quot;#IP地址&quot; class=&quot;headerlink&quot; title=&quot;IP地址&quot;&gt;&lt;/a&gt;IP地址&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;IP地址的组成：网络地址+主机地址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在 Internet 网络中，IP地址有</summary>
      
    
    
    
    <category term="网络层" scheme="http://example.com/categories/%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
    
    
    <category term="IP地址" scheme="http://example.com/tags/IP%E5%9C%B0%E5%9D%80/"/>
    
  </entry>
  
  <entry>
    <title>new2024</title>
    <link href="http://example.com/2024/01/01/new2024/"/>
    <id>http://example.com/2024/01/01/new2024/</id>
    <published>2024-01-01T05:57:37.000Z</published>
    <updated>2024-01-05T11:35:16.899Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2024-1-1"><a href="#2024-1-1" class="headerlink" title="2024&#x2F;1&#x2F;1"></a>2024&#x2F;1&#x2F;1</h1><p><img src="/images/202411.jpeg" alt="default"></p><center>守株待兔，固不可取。</center><center>叶公好龙，亦非所得。</center><center>临渊羡鱼，不如退而结网。</center><center>亡羊补牢，何如未雨绸缪。</center><p align="right">图片出处：赵芾江山万里图卷</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;2024-1-1&quot;&gt;&lt;a href=&quot;#2024-1-1&quot; class=&quot;headerlink&quot; title=&quot;2024&amp;#x2F;1&amp;#x2F;1&quot;&gt;&lt;/a&gt;2024&amp;#x2F;1&amp;#x2F;1&lt;/h1&gt;&lt;p&gt;&lt;img src=&quot;/images/202411.j</summary>
      
    
    
    
    <category term="log" scheme="http://example.com/categories/log/"/>
    
    
    <category term="life" scheme="http://example.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>newbin</title>
    <link href="http://example.com/2023/12/31/newbin/"/>
    <id>http://example.com/2023/12/31/newbin/</id>
    <published>2023-12-31T04:42:11.000Z</published>
    <updated>2024-01-01T07:36:24.601Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/2023/12/31/newbin/default.jpeg" alt></p><p>I hope the Pacific is as blue as it has been in my dreams.<br>I hope.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;img src=&quot;/2023/12/31/newbin/default.jpeg&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;I hope the Pacific is as blue as it has been in my dreams.&lt;br&gt;
I hope.&lt;/p&gt;
</summary>
      
    
    
    
    <category term="log" scheme="http://example.com/categories/log/"/>
    
    
    <category term="life" scheme="http://example.com/tags/life/"/>
    
  </entry>
  
</feed>
